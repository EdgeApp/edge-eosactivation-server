currency code requested : BTC
getLatestEosActivationPriceInSelectedCryptoCurrency().cryptoPricing received 25 cryptos
eosPricingResponse:  { _id: 'eosPrices',
  _rev: '616513-a23435184d7a38231bd33ab139cdff1b',
  ram: '0.06099',
  net: '0.0003339011862528',
  cpu: '0.3560287489665833' }
stakeNetQuantity: 0.1000
stakeCpuQuantity: 7.1206
totalEos: 7.72023008
{ BTC_USD: '10160.963658' }
{ EOS_USD: '4.46185450156' }
valuesInUSD:  [ { BTC_USD: '10160.963658' }, { EOS_USD: '4.46185450156' } ]
eosActivationFee:  7.72023008
eosActivationFee in USD:  34.4465433355269189248
calculated eosActivationFee in : BTC:  0.000439117258
Error creating invoice: { StatusCodeError: 400 - {"error":"No payment method available for this store\n2/19/20 8:01:38 PM: Creation of invoice starting\n2/19/20 8:01:40 PM: LTC_USD: The rating rule is (bitstamp(LTC_USD)) * (0.75, 1.25)\n2/19/20 8:01:40 PM: LTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, LTC_USD)) * (0.75, 1.25)\n2/19/20 8:01:40 PM: LTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:01:40 PM: LTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n2/19/20 8:01:40 PM: BTC_USD: The rating rule is (bitstamp(BTC_USD)) * (0.75, 1.25)\n2/19/20 8:01:40 PM: BTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\n2/19/20 8:01:40 PM: BTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:01:40 PM: BTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n2/19/20 8:01:40 PM: FTC_USD: The rating rule is (bittrex(FTC_BTC) * bitstamp(BTC_USD)) * (0.75, 1.25)\n2/19/20 8:01:40 PM: FTC_USD: The evaluated rating rule is ((0.00000099, 0.000001) * ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\n2/19/20 8:01:40 PM: FTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:01:40 PM: FTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n"}
    at new StatusCodeError (/opt/eos-name-api/edge-eos-name-payment-api/node_modules/request-promise-core/lib/errors.js:32:15)
    at Request.plumbing.callback (/opt/eos-name-api/edge-eos-name-payment-api/node_modules/request-promise-core/lib/plumbing.js:104:33)
    at Request.RP$callback [as _callback] (/opt/eos-name-api/edge-eos-name-payment-api/node_modules/request-promise-core/lib/plumbing.js:46:31)
    at Request.self.callback (/opt/eos-name-api/edge-eos-name-payment-api/node_modules/request/request.js:185:22)
    at Request.emit (events.js:188:13)
    at Request.<anonymous> (/opt/eos-name-api/edge-eos-name-payment-api/node_modules/request/request.js:1157:10)
    at Request.emit (events.js:188:13)
    at IncomingMessage.<anonymous> (/opt/eos-name-api/edge-eos-name-payment-api/node_modules/request/request.js:1079:12)
    at Object.onceWrapper (events.js:276:13)
    at IncomingMessage.emit (events.js:193:15)
    at endReadableNT (_stream_readable.js:1129:12)
    at process.internalTickCallback (internal/process/next_tick.js:72:19)
  name: 'StatusCodeError',
  statusCode: 400,
  message:
   '400 - {"error":"No payment method available for this store\\n2/19/20 8:01:38 PM: Creation of invoice starting\\n2/19/20 8:01:40 PM: LTC_USD: The rating rule is (bitstamp(LTC_USD)) * (0.75, 1.25)\\n2/19/20 8:01:40 PM: LTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, LTC_USD)) * (0.75, 1.25)\\n2/19/20 8:01:40 PM: LTC_USD: Rate rule error (RateUnavailable)\\n2/19/20 8:01:40 PM: LTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\\n2/19/20 8:01:40 PM: BTC_USD: The rating rule is (bitstamp(BTC_USD)) * (0.75, 1.25)\\n2/19/20 8:01:40 PM: BTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\\n2/19/20 8:01:40 PM: BTC_USD: Rate rule error (RateUnavailable)\\n2/19/20 8:01:40 PM: BTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\\n2/19/20 8:01:40 PM: FTC_USD: The rating rule is (bittrex(FTC_BTC) * bitstamp(BTC_USD)) * (0.75, 1.25)\\n2/19/20 8:01:40 PM: FTC_USD: The evaluated rating rule is ((0.00000099, 0.000001) * ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\\n2/19/20 8:01:40 PM: FTC_USD: Rate rule error (RateUnavailable)\\n2/19/20 8:01:40 PM: FTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\\n"}',
  error:
   { error:
      'No payment method available for this store\n2/19/20 8:01:38 PM: Creation of invoice starting\n2/19/20 8:01:40 PM: LTC_USD: The rating rule is (bitstamp(LTC_USD)) * (0.75, 1.25)\n2/19/20 8:01:40 PM: LTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, LTC_USD)) * (0.75, 1.25)\n2/19/20 8:01:40 PM: LTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:01:40 PM: LTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n2/19/20 8:01:40 PM: BTC_USD: The rating rule is (bitstamp(BTC_USD)) * (0.75, 1.25)\n2/19/20 8:01:40 PM: BTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\n2/19/20 8:01:40 PM: BTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:01:40 PM: BTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n2/19/20 8:01:40 PM: FTC_USD: The rating rule is (bittrex(FTC_BTC) * bitstamp(BTC_USD)) * (0.75, 1.25)\n2/19/20 8:01:40 PM: FTC_USD: The evaluated rating rule is ((0.00000099, 0.000001) * ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\n2/19/20 8:01:40 PM: FTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:01:40 PM: FTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n' },
  options:
   { headers:
      { 'Content-Type': 'application/json',
        Accept: 'application/json',
        'X-Accept-Version': '2.0.0',
        'X-Identity':
         '02a9c547925413f26593dc0b5bf2b08b48ce1cb16d70fc50e034ad476b109f8c83',
        'X-Signature':
         '30450220117934aa4d1b8c7bbf0474a31c87cca56ddaaa55112812d5d1e42f2f108c85cd022100e490bafa46e2f093df1b714abc8bc2a2077066078d889c3af8a16d6ca1849e5a' },
     json: true,
     uri: 'https://btcpay135208.lndyn.com/invoices',
     body:
      { price: '34.4465433355269189248',
        currency: 'USD',
        notificationEmail: null,
        notificationURL:
         'https://eos-pay-sf2.edgesecure.co/api/v1/invoiceNotificationEvent/',
        extendedNotifications: true,
        physical: false,
        token: '7Ajvti4uAfQuJSvUN3kvD2KCktzAQy528p3QcPZXuFjc' },
     method: 'POST',
     callback: [Function: RP$callback],
     transform: undefined,
     simple: true,
     resolveWithFullResponse: false,
     transform2xxOnly: false },
  response:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: false,
     _events:
      [Object: null prototype] {
        end: [Array],
        close: [Array],
        data: [Function],
        error: [Function] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket:
      TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'btcpay135208.lndyn.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object],
        _eventsCount: 7,
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'btcpay135208.lndyn.com',
        _readableState: [ReadableState],
        readable: false,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(res)]: [TLSWrap],
        [Symbol(asyncId)]: 2536751,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 1640,
        [Symbol(kBytesWritten)]: 681,
        [Symbol(connect-options)]: [Object] },
     connection:
      TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'btcpay135208.lndyn.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object],
        _eventsCount: 7,
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'btcpay135208.lndyn.com',
        _readableState: [ReadableState],
        readable: false,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(res)]: [TLSWrap],
        [Symbol(asyncId)]: 2536751,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 1640,
        [Symbol(kBytesWritten)]: 681,
        [Symbol(connect-options)]: [Object] },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { server: 'nginx',
        date: 'Wed, 19 Feb 2020 20:01:40 GMT',
        'content-type': 'application/json',
        'transfer-encoding': 'chunked',
        connection: 'close',
        'referrer-policy': 'same-origin',
        'x-xss-protection': '1; mode=block',
        'x-content-type-options': 'nosniff',
        'x-frame-options': 'DENY',
        'strict-transport-security': 'max-age=31536000' },
     rawHeaders:
      [ 'Server',
        'nginx',
        'Date',
        'Wed, 19 Feb 2020 20:01:40 GMT',
        'Content-Type',
        'application/json',
        'Transfer-Encoding',
        'chunked',
        'Connection',
        'close',
        'Referrer-Policy',
        'same-origin',
        'X-XSS-Protection',
        '1; mode=block',
        'X-Content-Type-Options',
        'nosniff',
        'X-Frame-Options',
        'DENY',
        'Strict-Transport-Security',
        'max-age=31536000' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 400,
     statusMessage: 'Bad Request',
     client:
      TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'btcpay135208.lndyn.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object],
        _eventsCount: 7,
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'btcpay135208.lndyn.com',
        _readableState: [ReadableState],
        readable: false,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(res)]: [TLSWrap],
        [Symbol(asyncId)]: 2536751,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 1640,
        [Symbol(kBytesWritten)]: 681,
        [Symbol(connect-options)]: [Object] },
     _consuming: true,
     _dumped: false,
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [TLSSocket],
        connection: [TLSSocket],
        _header:
         'POST /invoices HTTP/1.1\r\nContent-Type: application/json\r\nAccept: application/json\r\nX-Accept-Version: 2.0.0\r\nX-Identity: 02a9c547925413f26593dc0b5bf2b08b48ce1cb16d70fc50e034ad476b109f8c83\r\nX-Signature: 30450220117934aa4d1b8c7bbf0474a31c87cca56ddaaa55112812d5d1e42f2f108c85cd022100e490bafa46e2f093df1b714abc8bc2a2077066078d889c3af8a16d6ca1849e5a\r\nhost: btcpay135208.lndyn.com\r\ncontent-length: 264\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/invoices',
        _ended: true,
        res: [Circular],
        aborted: false,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     request:
      Request {
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        headers: [Object],
        uri: [Url],
        body:
         '{"price":"34.4465433355269189248","currency":"USD","notificationEmail":null,"notificationURL":"https://eos-pay-sf2.edgesecure.co/api/v1/invoiceNotificationEvent/","extendedNotifications":true,"physical":false,"token":"7Ajvti4uAfQuJSvUN3kvD2KCktzAQy528p3QcPZXuFjc"}',
        method: 'POST',
        readable: true,
        writable: true,
        explicitMethod: true,
        _qs: [Querystring],
        _auth: [Auth],
        _oauth: [OAuth],
        _multipart: [Multipart],
        _redirect: [Redirect],
        _tunnel: [Tunnel],
        _rp_resolve: [Function],
        _rp_reject: [Function],
        _rp_promise: [Promise],
        _rp_callbackOrig: undefined,
        callback: [Function],
        _rp_options: [Object],
        setHeader: [Function],
        hasHeader: [Function],
        getHeader: [Function],
        removeHeader: [Function],
        localAddress: undefined,
        pool: {},
        dests: [],
        __isRequestRequest: true,
        _callback: [Function: RP$callback],
        proxy: null,
        tunnel: true,
        setHost: true,
        originalCookieHeader: undefined,
        _disableCookies: true,
        _jar: undefined,
        port: 443,
        host: 'btcpay135208.lndyn.com',
        path: '/invoices',
        _json: true,
        httpModule: [Object],
        agentClass: [Function: Agent],
        agent: [Agent],
        _started: true,
        href: 'https://btcpay135208.lndyn.com/invoices',
        req: [ClientRequest],
        ntick: true,
        response: [Circular],
        originalHost: 'btcpay135208.lndyn.com',
        originalHostHeaderName: 'host',
        responseContent: [Circular],
        _destdata: true,
        _ended: true,
        _callbackCalled: true },
     toJSON: [Function: responseToJSON],
     caseless: Caseless { dict: [Object] },
     body:
      { error:
         'No payment method available for this store\n2/19/20 8:01:38 PM: Creation of invoice starting\n2/19/20 8:01:40 PM: LTC_USD: The rating rule is (bitstamp(LTC_USD)) * (0.75, 1.25)\n2/19/20 8:01:40 PM: LTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, LTC_USD)) * (0.75, 1.25)\n2/19/20 8:01:40 PM: LTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:01:40 PM: LTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n2/19/20 8:01:40 PM: BTC_USD: The rating rule is (bitstamp(BTC_USD)) * (0.75, 1.25)\n2/19/20 8:01:40 PM: BTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\n2/19/20 8:01:40 PM: BTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:01:40 PM: BTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n2/19/20 8:01:40 PM: FTC_USD: The rating rule is (bittrex(FTC_BTC) * bitstamp(BTC_USD)) * (0.75, 1.25)\n2/19/20 8:01:40 PM: FTC_USD: The evaluated rating rule is ((0.00000099, 0.000001) * ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\n2/19/20 8:01:40 PM: FTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:01:40 PM: FTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n' } } }
currency code requested : BTC
getLatestEosActivationPriceInSelectedCryptoCurrency().cryptoPricing received 25 cryptos
stakeNetQuantity: 0.1000
stakeCpuQuantity: 7.1206
totalEos: 7.72023008
{ BTC_USD: '10160.963658' }
{ EOS_USD: '4.46185450156' }
valuesInUSD:  [ { BTC_USD: '10160.963658' }, { EOS_USD: '4.46185450156' } ]
eosActivationFee:  7.72023008
eosActivationFee in USD:  34.4465433355269189248
calculated eosActivationFee in : BTC:  0.000439117258
Error creating invoice: { StatusCodeError: 400 - {"error":"No payment method available for this store\n2/19/20 8:02:02 PM: Creation of invoice starting\n2/19/20 8:02:02 PM: LTC_USD: The rating rule is (bitstamp(LTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:02 PM: LTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, LTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:02 PM: LTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:02:02 PM: LTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n2/19/20 8:02:02 PM: BTC_USD: The rating rule is (bitstamp(BTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:02 PM: BTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:02 PM: BTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:02:02 PM: BTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n2/19/20 8:02:02 PM: FTC_USD: The rating rule is (bittrex(FTC_BTC) * bitstamp(BTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:02 PM: FTC_USD: The evaluated rating rule is ((0.00000099, 0.000001) * ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:02 PM: FTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:02:02 PM: FTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n"}
    at new StatusCodeError (/opt/eos-name-api/edge-eos-name-payment-api/node_modules/request-promise-core/lib/errors.js:32:15)
    at Request.plumbing.callback (/opt/eos-name-api/edge-eos-name-payment-api/node_modules/request-promise-core/lib/plumbing.js:104:33)
    at Request.RP$callback [as _callback] (/opt/eos-name-api/edge-eos-name-payment-api/node_modules/request-promise-core/lib/plumbing.js:46:31)
    at Request.self.callback (/opt/eos-name-api/edge-eos-name-payment-api/node_modules/request/request.js:185:22)
    at Request.emit (events.js:188:13)
    at Request.<anonymous> (/opt/eos-name-api/edge-eos-name-payment-api/node_modules/request/request.js:1157:10)
    at Request.emit (events.js:188:13)
    at IncomingMessage.<anonymous> (/opt/eos-name-api/edge-eos-name-payment-api/node_modules/request/request.js:1079:12)
    at Object.onceWrapper (events.js:276:13)
    at IncomingMessage.emit (events.js:193:15)
    at endReadableNT (_stream_readable.js:1129:12)
    at process.internalTickCallback (internal/process/next_tick.js:72:19)
  name: 'StatusCodeError',
  statusCode: 400,
  message:
   '400 - {"error":"No payment method available for this store\\n2/19/20 8:02:02 PM: Creation of invoice starting\\n2/19/20 8:02:02 PM: LTC_USD: The rating rule is (bitstamp(LTC_USD)) * (0.75, 1.25)\\n2/19/20 8:02:02 PM: LTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, LTC_USD)) * (0.75, 1.25)\\n2/19/20 8:02:02 PM: LTC_USD: Rate rule error (RateUnavailable)\\n2/19/20 8:02:02 PM: LTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\\n2/19/20 8:02:02 PM: BTC_USD: The rating rule is (bitstamp(BTC_USD)) * (0.75, 1.25)\\n2/19/20 8:02:02 PM: BTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\\n2/19/20 8:02:02 PM: BTC_USD: Rate rule error (RateUnavailable)\\n2/19/20 8:02:02 PM: BTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\\n2/19/20 8:02:02 PM: FTC_USD: The rating rule is (bittrex(FTC_BTC) * bitstamp(BTC_USD)) * (0.75, 1.25)\\n2/19/20 8:02:02 PM: FTC_USD: The evaluated rating rule is ((0.00000099, 0.000001) * ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\\n2/19/20 8:02:02 PM: FTC_USD: Rate rule error (RateUnavailable)\\n2/19/20 8:02:02 PM: FTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\\n"}',
  error:
   { error:
      'No payment method available for this store\n2/19/20 8:02:02 PM: Creation of invoice starting\n2/19/20 8:02:02 PM: LTC_USD: The rating rule is (bitstamp(LTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:02 PM: LTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, LTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:02 PM: LTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:02:02 PM: LTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n2/19/20 8:02:02 PM: BTC_USD: The rating rule is (bitstamp(BTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:02 PM: BTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:02 PM: BTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:02:02 PM: BTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n2/19/20 8:02:02 PM: FTC_USD: The rating rule is (bittrex(FTC_BTC) * bitstamp(BTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:02 PM: FTC_USD: The evaluated rating rule is ((0.00000099, 0.000001) * ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:02 PM: FTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:02:02 PM: FTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n' },
  options:
   { headers:
      { 'Content-Type': 'application/json',
        Accept: 'application/json',
        'X-Accept-Version': '2.0.0',
        'X-Identity':
         '02a9c547925413f26593dc0b5bf2b08b48ce1cb16d70fc50e034ad476b109f8c83',
        'X-Signature':
         '30450220117934aa4d1b8c7bbf0474a31c87cca56ddaaa55112812d5d1e42f2f108c85cd022100e490bafa46e2f093df1b714abc8bc2a2077066078d889c3af8a16d6ca1849e5a' },
     json: true,
     uri: 'https://btcpay135208.lndyn.com/invoices',
     body:
      { price: '34.4465433355269189248',
        currency: 'USD',
        notificationEmail: null,
        notificationURL:
         'https://eos-pay-sf2.edgesecure.co/api/v1/invoiceNotificationEvent/',
        extendedNotifications: true,
        physical: false,
        token: '7Ajvti4uAfQuJSvUN3kvD2KCktzAQy528p3QcPZXuFjc' },
     method: 'POST',
     callback: [Function: RP$callback],
     transform: undefined,
     simple: true,
     resolveWithFullResponse: false,
     transform2xxOnly: false },
  response:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: false,
     _events:
      [Object: null prototype] {
        end: [Array],
        close: [Array],
        data: [Function],
        error: [Function] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket:
      TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'btcpay135208.lndyn.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object],
        _eventsCount: 7,
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'btcpay135208.lndyn.com',
        _readableState: [ReadableState],
        readable: false,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(res)]: [TLSWrap],
        [Symbol(asyncId)]: 2536803,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 1647,
        [Symbol(kBytesWritten)]: 681,
        [Symbol(connect-options)]: [Object] },
     connection:
      TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'btcpay135208.lndyn.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object],
        _eventsCount: 7,
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'btcpay135208.lndyn.com',
        _readableState: [ReadableState],
        readable: false,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(res)]: [TLSWrap],
        [Symbol(asyncId)]: 2536803,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 1647,
        [Symbol(kBytesWritten)]: 681,
        [Symbol(connect-options)]: [Object] },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { server: 'nginx',
        date: 'Wed, 19 Feb 2020 20:02:02 GMT',
        'content-type': 'application/json',
        'transfer-encoding': 'chunked',
        connection: 'close',
        'referrer-policy': 'same-origin',
        'x-xss-protection': '1; mode=block',
        'x-content-type-options': 'nosniff',
        'x-frame-options': 'DENY',
        'strict-transport-security': 'max-age=31536000' },
     rawHeaders:
      [ 'Server',
        'nginx',
        'Date',
        'Wed, 19 Feb 2020 20:02:02 GMT',
        'Content-Type',
        'application/json',
        'Transfer-Encoding',
        'chunked',
        'Connection',
        'close',
        'Referrer-Policy',
        'same-origin',
        'X-XSS-Protection',
        '1; mode=block',
        'X-Content-Type-Options',
        'nosniff',
        'X-Frame-Options',
        'DENY',
        'Strict-Transport-Security',
        'max-age=31536000' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 400,
     statusMessage: 'Bad Request',
     client:
      TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'btcpay135208.lndyn.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object],
        _eventsCount: 7,
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'btcpay135208.lndyn.com',
        _readableState: [ReadableState],
        readable: false,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(res)]: [TLSWrap],
        [Symbol(asyncId)]: 2536803,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 1647,
        [Symbol(kBytesWritten)]: 681,
        [Symbol(connect-options)]: [Object] },
     _consuming: true,
     _dumped: false,
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [TLSSocket],
        connection: [TLSSocket],
        _header:
         'POST /invoices HTTP/1.1\r\nContent-Type: application/json\r\nAccept: application/json\r\nX-Accept-Version: 2.0.0\r\nX-Identity: 02a9c547925413f26593dc0b5bf2b08b48ce1cb16d70fc50e034ad476b109f8c83\r\nX-Signature: 30450220117934aa4d1b8c7bbf0474a31c87cca56ddaaa55112812d5d1e42f2f108c85cd022100e490bafa46e2f093df1b714abc8bc2a2077066078d889c3af8a16d6ca1849e5a\r\nhost: btcpay135208.lndyn.com\r\ncontent-length: 264\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/invoices',
        _ended: true,
        res: [Circular],
        aborted: false,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     request:
      Request {
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        headers: [Object],
        uri: [Url],
        body:
         '{"price":"34.4465433355269189248","currency":"USD","notificationEmail":null,"notificationURL":"https://eos-pay-sf2.edgesecure.co/api/v1/invoiceNotificationEvent/","extendedNotifications":true,"physical":false,"token":"7Ajvti4uAfQuJSvUN3kvD2KCktzAQy528p3QcPZXuFjc"}',
        method: 'POST',
        readable: true,
        writable: true,
        explicitMethod: true,
        _qs: [Querystring],
        _auth: [Auth],
        _oauth: [OAuth],
        _multipart: [Multipart],
        _redirect: [Redirect],
        _tunnel: [Tunnel],
        _rp_resolve: [Function],
        _rp_reject: [Function],
        _rp_promise: [Promise],
        _rp_callbackOrig: undefined,
        callback: [Function],
        _rp_options: [Object],
        setHeader: [Function],
        hasHeader: [Function],
        getHeader: [Function],
        removeHeader: [Function],
        localAddress: undefined,
        pool: {},
        dests: [],
        __isRequestRequest: true,
        _callback: [Function: RP$callback],
        proxy: null,
        tunnel: true,
        setHost: true,
        originalCookieHeader: undefined,
        _disableCookies: true,
        _jar: undefined,
        port: 443,
        host: 'btcpay135208.lndyn.com',
        path: '/invoices',
        _json: true,
        httpModule: [Object],
        agentClass: [Function: Agent],
        agent: [Agent],
        _started: true,
        href: 'https://btcpay135208.lndyn.com/invoices',
        req: [ClientRequest],
        ntick: true,
        response: [Circular],
        originalHost: 'btcpay135208.lndyn.com',
        originalHostHeaderName: 'host',
        responseContent: [Circular],
        _destdata: true,
        _ended: true,
        _callbackCalled: true },
     toJSON: [Function: responseToJSON],
     caseless: Caseless { dict: [Object] },
     body:
      { error:
         'No payment method available for this store\n2/19/20 8:02:02 PM: Creation of invoice starting\n2/19/20 8:02:02 PM: LTC_USD: The rating rule is (bitstamp(LTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:02 PM: LTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, LTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:02 PM: LTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:02:02 PM: LTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n2/19/20 8:02:02 PM: BTC_USD: The rating rule is (bitstamp(BTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:02 PM: BTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:02 PM: BTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:02:02 PM: BTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n2/19/20 8:02:02 PM: FTC_USD: The rating rule is (bittrex(FTC_BTC) * bitstamp(BTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:02 PM: FTC_USD: The evaluated rating rule is ((0.00000099, 0.000001) * ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:02 PM: FTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:02:02 PM: FTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n' } } }
currency code requested : LTC
getLatestEosActivationPriceInSelectedCryptoCurrency().cryptoPricing received 25 cryptos
stakeNetQuantity: 0.1000
stakeCpuQuantity: 7.1206
totalEos: 7.72023008
{ LTC_USD: '76.7523655345' }
{ EOS_USD: '4.46185450156' }
valuesInUSD:  [ { LTC_USD: '76.7523655345' }, { EOS_USD: '4.46185450156' } ]
eosActivationFee:  7.72023008
eosActivationFee in USD:  34.4465433355269189248
calculated eosActivationFee in : LTC:  0.058133120334
Error creating invoice: { StatusCodeError: 400 - {"error":"No payment method available for this store\n2/19/20 8:02:24 PM: Creation of invoice starting\n2/19/20 8:02:24 PM: LTC_USD: The rating rule is (bitstamp(LTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:24 PM: LTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, LTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:24 PM: LTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:02:24 PM: LTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n2/19/20 8:02:24 PM: BTC_USD: The rating rule is (bitstamp(BTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:24 PM: BTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:24 PM: BTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:02:24 PM: BTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n2/19/20 8:02:24 PM: FTC_USD: The rating rule is (bittrex(FTC_BTC) * bitstamp(BTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:24 PM: FTC_USD: The evaluated rating rule is ((0.00000099, 0.000001) * ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:24 PM: FTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:02:24 PM: FTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n"}
    at new StatusCodeError (/opt/eos-name-api/edge-eos-name-payment-api/node_modules/request-promise-core/lib/errors.js:32:15)
    at Request.plumbing.callback (/opt/eos-name-api/edge-eos-name-payment-api/node_modules/request-promise-core/lib/plumbing.js:104:33)
    at Request.RP$callback [as _callback] (/opt/eos-name-api/edge-eos-name-payment-api/node_modules/request-promise-core/lib/plumbing.js:46:31)
    at Request.self.callback (/opt/eos-name-api/edge-eos-name-payment-api/node_modules/request/request.js:185:22)
    at Request.emit (events.js:188:13)
    at Request.<anonymous> (/opt/eos-name-api/edge-eos-name-payment-api/node_modules/request/request.js:1157:10)
    at Request.emit (events.js:188:13)
    at IncomingMessage.<anonymous> (/opt/eos-name-api/edge-eos-name-payment-api/node_modules/request/request.js:1079:12)
    at Object.onceWrapper (events.js:276:13)
    at IncomingMessage.emit (events.js:193:15)
    at endReadableNT (_stream_readable.js:1129:12)
    at process.internalTickCallback (internal/process/next_tick.js:72:19)
  name: 'StatusCodeError',
  statusCode: 400,
  message:
   '400 - {"error":"No payment method available for this store\\n2/19/20 8:02:24 PM: Creation of invoice starting\\n2/19/20 8:02:24 PM: LTC_USD: The rating rule is (bitstamp(LTC_USD)) * (0.75, 1.25)\\n2/19/20 8:02:24 PM: LTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, LTC_USD)) * (0.75, 1.25)\\n2/19/20 8:02:24 PM: LTC_USD: Rate rule error (RateUnavailable)\\n2/19/20 8:02:24 PM: LTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\\n2/19/20 8:02:24 PM: BTC_USD: The rating rule is (bitstamp(BTC_USD)) * (0.75, 1.25)\\n2/19/20 8:02:24 PM: BTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\\n2/19/20 8:02:24 PM: BTC_USD: Rate rule error (RateUnavailable)\\n2/19/20 8:02:24 PM: BTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\\n2/19/20 8:02:24 PM: FTC_USD: The rating rule is (bittrex(FTC_BTC) * bitstamp(BTC_USD)) * (0.75, 1.25)\\n2/19/20 8:02:24 PM: FTC_USD: The evaluated rating rule is ((0.00000099, 0.000001) * ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\\n2/19/20 8:02:24 PM: FTC_USD: Rate rule error (RateUnavailable)\\n2/19/20 8:02:24 PM: FTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\\n"}',
  error:
   { error:
      'No payment method available for this store\n2/19/20 8:02:24 PM: Creation of invoice starting\n2/19/20 8:02:24 PM: LTC_USD: The rating rule is (bitstamp(LTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:24 PM: LTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, LTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:24 PM: LTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:02:24 PM: LTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n2/19/20 8:02:24 PM: BTC_USD: The rating rule is (bitstamp(BTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:24 PM: BTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:24 PM: BTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:02:24 PM: BTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n2/19/20 8:02:24 PM: FTC_USD: The rating rule is (bittrex(FTC_BTC) * bitstamp(BTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:24 PM: FTC_USD: The evaluated rating rule is ((0.00000099, 0.000001) * ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:24 PM: FTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:02:24 PM: FTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n' },
  options:
   { headers:
      { 'Content-Type': 'application/json',
        Accept: 'application/json',
        'X-Accept-Version': '2.0.0',
        'X-Identity':
         '02a9c547925413f26593dc0b5bf2b08b48ce1cb16d70fc50e034ad476b109f8c83',
        'X-Signature':
         '30450220117934aa4d1b8c7bbf0474a31c87cca56ddaaa55112812d5d1e42f2f108c85cd022100e490bafa46e2f093df1b714abc8bc2a2077066078d889c3af8a16d6ca1849e5a' },
     json: true,
     uri: 'https://btcpay135208.lndyn.com/invoices',
     body:
      { price: '34.4465433355269189248',
        currency: 'USD',
        notificationEmail: null,
        notificationURL:
         'https://eos-pay-sf2.edgesecure.co/api/v1/invoiceNotificationEvent/',
        extendedNotifications: true,
        physical: false,
        token: '7Ajvti4uAfQuJSvUN3kvD2KCktzAQy528p3QcPZXuFjc' },
     method: 'POST',
     callback: [Function: RP$callback],
     transform: undefined,
     simple: true,
     resolveWithFullResponse: false,
     transform2xxOnly: false },
  response:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: false,
     _events:
      [Object: null prototype] {
        end: [Array],
        close: [Array],
        data: [Function],
        error: [Function] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket:
      TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'btcpay135208.lndyn.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object],
        _eventsCount: 7,
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'btcpay135208.lndyn.com',
        _readableState: [ReadableState],
        readable: false,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(res)]: [TLSWrap],
        [Symbol(asyncId)]: 2536881,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 1640,
        [Symbol(kBytesWritten)]: 681,
        [Symbol(connect-options)]: [Object] },
     connection:
      TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'btcpay135208.lndyn.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object],
        _eventsCount: 7,
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'btcpay135208.lndyn.com',
        _readableState: [ReadableState],
        readable: false,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(res)]: [TLSWrap],
        [Symbol(asyncId)]: 2536881,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 1640,
        [Symbol(kBytesWritten)]: 681,
        [Symbol(connect-options)]: [Object] },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { server: 'nginx',
        date: 'Wed, 19 Feb 2020 20:02:24 GMT',
        'content-type': 'application/json',
        'transfer-encoding': 'chunked',
        connection: 'close',
        'referrer-policy': 'same-origin',
        'x-xss-protection': '1; mode=block',
        'x-content-type-options': 'nosniff',
        'x-frame-options': 'DENY',
        'strict-transport-security': 'max-age=31536000' },
     rawHeaders:
      [ 'Server',
        'nginx',
        'Date',
        'Wed, 19 Feb 2020 20:02:24 GMT',
        'Content-Type',
        'application/json',
        'Transfer-Encoding',
        'chunked',
        'Connection',
        'close',
        'Referrer-Policy',
        'same-origin',
        'X-XSS-Protection',
        '1; mode=block',
        'X-Content-Type-Options',
        'nosniff',
        'X-Frame-Options',
        'DENY',
        'Strict-Transport-Security',
        'max-age=31536000' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 400,
     statusMessage: 'Bad Request',
     client:
      TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'btcpay135208.lndyn.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object],
        _eventsCount: 7,
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'btcpay135208.lndyn.com',
        _readableState: [ReadableState],
        readable: false,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(res)]: [TLSWrap],
        [Symbol(asyncId)]: 2536881,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 1640,
        [Symbol(kBytesWritten)]: 681,
        [Symbol(connect-options)]: [Object] },
     _consuming: true,
     _dumped: false,
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [TLSSocket],
        connection: [TLSSocket],
        _header:
         'POST /invoices HTTP/1.1\r\nContent-Type: application/json\r\nAccept: application/json\r\nX-Accept-Version: 2.0.0\r\nX-Identity: 02a9c547925413f26593dc0b5bf2b08b48ce1cb16d70fc50e034ad476b109f8c83\r\nX-Signature: 30450220117934aa4d1b8c7bbf0474a31c87cca56ddaaa55112812d5d1e42f2f108c85cd022100e490bafa46e2f093df1b714abc8bc2a2077066078d889c3af8a16d6ca1849e5a\r\nhost: btcpay135208.lndyn.com\r\ncontent-length: 264\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/invoices',
        _ended: true,
        res: [Circular],
        aborted: false,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     request:
      Request {
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        headers: [Object],
        uri: [Url],
        body:
         '{"price":"34.4465433355269189248","currency":"USD","notificationEmail":null,"notificationURL":"https://eos-pay-sf2.edgesecure.co/api/v1/invoiceNotificationEvent/","extendedNotifications":true,"physical":false,"token":"7Ajvti4uAfQuJSvUN3kvD2KCktzAQy528p3QcPZXuFjc"}',
        method: 'POST',
        readable: true,
        writable: true,
        explicitMethod: true,
        _qs: [Querystring],
        _auth: [Auth],
        _oauth: [OAuth],
        _multipart: [Multipart],
        _redirect: [Redirect],
        _tunnel: [Tunnel],
        _rp_resolve: [Function],
        _rp_reject: [Function],
        _rp_promise: [Promise],
        _rp_callbackOrig: undefined,
        callback: [Function],
        _rp_options: [Object],
        setHeader: [Function],
        hasHeader: [Function],
        getHeader: [Function],
        removeHeader: [Function],
        localAddress: undefined,
        pool: {},
        dests: [],
        __isRequestRequest: true,
        _callback: [Function: RP$callback],
        proxy: null,
        tunnel: true,
        setHost: true,
        originalCookieHeader: undefined,
        _disableCookies: true,
        _jar: undefined,
        port: 443,
        host: 'btcpay135208.lndyn.com',
        path: '/invoices',
        _json: true,
        httpModule: [Object],
        agentClass: [Function: Agent],
        agent: [Agent],
        _started: true,
        href: 'https://btcpay135208.lndyn.com/invoices',
        req: [ClientRequest],
        ntick: true,
        response: [Circular],
        originalHost: 'btcpay135208.lndyn.com',
        originalHostHeaderName: 'host',
        responseContent: [Circular],
        _destdata: true,
        _ended: true,
        _callbackCalled: true },
     toJSON: [Function: responseToJSON],
     caseless: Caseless { dict: [Object] },
     body:
      { error:
         'No payment method available for this store\n2/19/20 8:02:24 PM: Creation of invoice starting\n2/19/20 8:02:24 PM: LTC_USD: The rating rule is (bitstamp(LTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:24 PM: LTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, LTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:24 PM: LTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:02:24 PM: LTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n2/19/20 8:02:24 PM: BTC_USD: The rating rule is (bitstamp(BTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:24 PM: BTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:24 PM: BTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:02:24 PM: BTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n2/19/20 8:02:24 PM: FTC_USD: The rating rule is (bittrex(FTC_BTC) * bitstamp(BTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:24 PM: FTC_USD: The evaluated rating rule is ((0.00000099, 0.000001) * ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\n2/19/20 8:02:24 PM: FTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:02:24 PM: FTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n' } } }
currency code requested : LTC
getLatestEosActivationPriceInSelectedCryptoCurrency().cryptoPricing received 25 cryptos
stakeNetQuantity: 0.1000
stakeCpuQuantity: 7.1206
totalEos: 7.72023008
{ LTC_USD: '76.7523655345' }
{ EOS_USD: '4.46185450156' }
valuesInUSD:  [ { LTC_USD: '76.7523655345' }, { EOS_USD: '4.46185450156' } ]
eosActivationFee:  7.72023008
eosActivationFee in USD:  34.4465433355269189248
calculated eosActivationFee in : LTC:  0.058133120334
Error creating invoice: { StatusCodeError: 400 - {"error":"No payment method available for this store\n2/19/20 8:04:39 PM: Creation of invoice starting\n2/19/20 8:04:39 PM: LTC_USD: The rating rule is (bitstamp(LTC_USD)) * (0.75, 1.25)\n2/19/20 8:04:39 PM: LTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, LTC_USD)) * (0.75, 1.25)\n2/19/20 8:04:39 PM: LTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:04:39 PM: LTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n2/19/20 8:04:39 PM: BTC_USD: The rating rule is (bitstamp(BTC_USD)) * (0.75, 1.25)\n2/19/20 8:04:39 PM: BTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\n2/19/20 8:04:39 PM: BTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:04:39 PM: BTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n2/19/20 8:04:39 PM: FTC_USD: The rating rule is (bittrex(FTC_BTC) * bitstamp(BTC_USD)) * (0.75, 1.25)\n2/19/20 8:04:39 PM: FTC_USD: The evaluated rating rule is ((0.00000099, 0.000001) * ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\n2/19/20 8:04:39 PM: FTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:04:39 PM: FTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n"}
    at new StatusCodeError (/opt/eos-name-api/edge-eos-name-payment-api/node_modules/request-promise-core/lib/errors.js:32:15)
    at Request.plumbing.callback (/opt/eos-name-api/edge-eos-name-payment-api/node_modules/request-promise-core/lib/plumbing.js:104:33)
    at Request.RP$callback [as _callback] (/opt/eos-name-api/edge-eos-name-payment-api/node_modules/request-promise-core/lib/plumbing.js:46:31)
    at Request.self.callback (/opt/eos-name-api/edge-eos-name-payment-api/node_modules/request/request.js:185:22)
    at Request.emit (events.js:188:13)
    at Request.<anonymous> (/opt/eos-name-api/edge-eos-name-payment-api/node_modules/request/request.js:1157:10)
    at Request.emit (events.js:188:13)
    at IncomingMessage.<anonymous> (/opt/eos-name-api/edge-eos-name-payment-api/node_modules/request/request.js:1079:12)
    at Object.onceWrapper (events.js:276:13)
    at IncomingMessage.emit (events.js:193:15)
    at endReadableNT (_stream_readable.js:1129:12)
    at process.internalTickCallback (internal/process/next_tick.js:72:19)
  name: 'StatusCodeError',
  statusCode: 400,
  message:
   '400 - {"error":"No payment method available for this store\\n2/19/20 8:04:39 PM: Creation of invoice starting\\n2/19/20 8:04:39 PM: LTC_USD: The rating rule is (bitstamp(LTC_USD)) * (0.75, 1.25)\\n2/19/20 8:04:39 PM: LTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, LTC_USD)) * (0.75, 1.25)\\n2/19/20 8:04:39 PM: LTC_USD: Rate rule error (RateUnavailable)\\n2/19/20 8:04:39 PM: LTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\\n2/19/20 8:04:39 PM: BTC_USD: The rating rule is (bitstamp(BTC_USD)) * (0.75, 1.25)\\n2/19/20 8:04:39 PM: BTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\\n2/19/20 8:04:39 PM: BTC_USD: Rate rule error (RateUnavailable)\\n2/19/20 8:04:39 PM: BTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\\n2/19/20 8:04:39 PM: FTC_USD: The rating rule is (bittrex(FTC_BTC) * bitstamp(BTC_USD)) * (0.75, 1.25)\\n2/19/20 8:04:39 PM: FTC_USD: The evaluated rating rule is ((0.00000099, 0.000001) * ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\\n2/19/20 8:04:39 PM: FTC_USD: Rate rule error (RateUnavailable)\\n2/19/20 8:04:39 PM: FTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\\n"}',
  error:
   { error:
      'No payment method available for this store\n2/19/20 8:04:39 PM: Creation of invoice starting\n2/19/20 8:04:39 PM: LTC_USD: The rating rule is (bitstamp(LTC_USD)) * (0.75, 1.25)\n2/19/20 8:04:39 PM: LTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, LTC_USD)) * (0.75, 1.25)\n2/19/20 8:04:39 PM: LTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:04:39 PM: LTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n2/19/20 8:04:39 PM: BTC_USD: The rating rule is (bitstamp(BTC_USD)) * (0.75, 1.25)\n2/19/20 8:04:39 PM: BTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\n2/19/20 8:04:39 PM: BTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:04:39 PM: BTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n2/19/20 8:04:39 PM: FTC_USD: The rating rule is (bittrex(FTC_BTC) * bitstamp(BTC_USD)) * (0.75, 1.25)\n2/19/20 8:04:39 PM: FTC_USD: The evaluated rating rule is ((0.00000099, 0.000001) * ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\n2/19/20 8:04:39 PM: FTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:04:39 PM: FTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n' },
  options:
   { headers:
      { 'Content-Type': 'application/json',
        Accept: 'application/json',
        'X-Accept-Version': '2.0.0',
        'X-Identity':
         '02a9c547925413f26593dc0b5bf2b08b48ce1cb16d70fc50e034ad476b109f8c83',
        'X-Signature':
         '30450220117934aa4d1b8c7bbf0474a31c87cca56ddaaa55112812d5d1e42f2f108c85cd022100e490bafa46e2f093df1b714abc8bc2a2077066078d889c3af8a16d6ca1849e5a' },
     json: true,
     uri: 'https://btcpay135208.lndyn.com/invoices',
     body:
      { price: '34.4465433355269189248',
        currency: 'USD',
        notificationEmail: null,
        notificationURL:
         'https://eos-pay-sf2.edgesecure.co/api/v1/invoiceNotificationEvent/',
        extendedNotifications: true,
        physical: false,
        token: '7Ajvti4uAfQuJSvUN3kvD2KCktzAQy528p3QcPZXuFjc' },
     method: 'POST',
     callback: [Function: RP$callback],
     transform: undefined,
     simple: true,
     resolveWithFullResponse: false,
     transform2xxOnly: false },
  response:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: false,
     _events:
      [Object: null prototype] {
        end: [Array],
        close: [Array],
        data: [Function],
        error: [Function] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket:
      TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'btcpay135208.lndyn.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object],
        _eventsCount: 7,
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'btcpay135208.lndyn.com',
        _readableState: [ReadableState],
        readable: false,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(res)]: [TLSWrap],
        [Symbol(asyncId)]: 2536956,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 1647,
        [Symbol(kBytesWritten)]: 681,
        [Symbol(connect-options)]: [Object] },
     connection:
      TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'btcpay135208.lndyn.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object],
        _eventsCount: 7,
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'btcpay135208.lndyn.com',
        _readableState: [ReadableState],
        readable: false,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(res)]: [TLSWrap],
        [Symbol(asyncId)]: 2536956,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 1647,
        [Symbol(kBytesWritten)]: 681,
        [Symbol(connect-options)]: [Object] },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { server: 'nginx',
        date: 'Wed, 19 Feb 2020 20:04:39 GMT',
        'content-type': 'application/json',
        'transfer-encoding': 'chunked',
        connection: 'close',
        'referrer-policy': 'same-origin',
        'x-xss-protection': '1; mode=block',
        'x-content-type-options': 'nosniff',
        'x-frame-options': 'DENY',
        'strict-transport-security': 'max-age=31536000' },
     rawHeaders:
      [ 'Server',
        'nginx',
        'Date',
        'Wed, 19 Feb 2020 20:04:39 GMT',
        'Content-Type',
        'application/json',
        'Transfer-Encoding',
        'chunked',
        'Connection',
        'close',
        'Referrer-Policy',
        'same-origin',
        'X-XSS-Protection',
        '1; mode=block',
        'X-Content-Type-Options',
        'nosniff',
        'X-Frame-Options',
        'DENY',
        'Strict-Transport-Security',
        'max-age=31536000' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 400,
     statusMessage: 'Bad Request',
     client:
      TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'btcpay135208.lndyn.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object],
        _eventsCount: 7,
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'btcpay135208.lndyn.com',
        _readableState: [ReadableState],
        readable: false,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(res)]: [TLSWrap],
        [Symbol(asyncId)]: 2536956,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 1647,
        [Symbol(kBytesWritten)]: 681,
        [Symbol(connect-options)]: [Object] },
     _consuming: true,
     _dumped: false,
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [TLSSocket],
        connection: [TLSSocket],
        _header:
         'POST /invoices HTTP/1.1\r\nContent-Type: application/json\r\nAccept: application/json\r\nX-Accept-Version: 2.0.0\r\nX-Identity: 02a9c547925413f26593dc0b5bf2b08b48ce1cb16d70fc50e034ad476b109f8c83\r\nX-Signature: 30450220117934aa4d1b8c7bbf0474a31c87cca56ddaaa55112812d5d1e42f2f108c85cd022100e490bafa46e2f093df1b714abc8bc2a2077066078d889c3af8a16d6ca1849e5a\r\nhost: btcpay135208.lndyn.com\r\ncontent-length: 264\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/invoices',
        _ended: true,
        res: [Circular],
        aborted: false,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     request:
      Request {
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        headers: [Object],
        uri: [Url],
        body:
         '{"price":"34.4465433355269189248","currency":"USD","notificationEmail":null,"notificationURL":"https://eos-pay-sf2.edgesecure.co/api/v1/invoiceNotificationEvent/","extendedNotifications":true,"physical":false,"token":"7Ajvti4uAfQuJSvUN3kvD2KCktzAQy528p3QcPZXuFjc"}',
        method: 'POST',
        readable: true,
        writable: true,
        explicitMethod: true,
        _qs: [Querystring],
        _auth: [Auth],
        _oauth: [OAuth],
        _multipart: [Multipart],
        _redirect: [Redirect],
        _tunnel: [Tunnel],
        _rp_resolve: [Function],
        _rp_reject: [Function],
        _rp_promise: [Promise],
        _rp_callbackOrig: undefined,
        callback: [Function],
        _rp_options: [Object],
        setHeader: [Function],
        hasHeader: [Function],
        getHeader: [Function],
        removeHeader: [Function],
        localAddress: undefined,
        pool: {},
        dests: [],
        __isRequestRequest: true,
        _callback: [Function: RP$callback],
        proxy: null,
        tunnel: true,
        setHost: true,
        originalCookieHeader: undefined,
        _disableCookies: true,
        _jar: undefined,
        port: 443,
        host: 'btcpay135208.lndyn.com',
        path: '/invoices',
        _json: true,
        httpModule: [Object],
        agentClass: [Function: Agent],
        agent: [Agent],
        _started: true,
        href: 'https://btcpay135208.lndyn.com/invoices',
        req: [ClientRequest],
        ntick: true,
        response: [Circular],
        originalHost: 'btcpay135208.lndyn.com',
        originalHostHeaderName: 'host',
        responseContent: [Circular],
        _destdata: true,
        _ended: true,
        _callbackCalled: true },
     toJSON: [Function: responseToJSON],
     caseless: Caseless { dict: [Object] },
     body:
      { error:
         'No payment method available for this store\n2/19/20 8:04:39 PM: Creation of invoice starting\n2/19/20 8:04:39 PM: LTC_USD: The rating rule is (bitstamp(LTC_USD)) * (0.75, 1.25)\n2/19/20 8:04:39 PM: LTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, LTC_USD)) * (0.75, 1.25)\n2/19/20 8:04:39 PM: LTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:04:39 PM: LTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n2/19/20 8:04:39 PM: BTC_USD: The rating rule is (bitstamp(BTC_USD)) * (0.75, 1.25)\n2/19/20 8:04:39 PM: BTC_USD: The evaluated rating rule is (ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\n2/19/20 8:04:39 PM: BTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:04:39 PM: BTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n2/19/20 8:04:39 PM: FTC_USD: The rating rule is (bittrex(FTC_BTC) * bitstamp(BTC_USD)) * (0.75, 1.25)\n2/19/20 8:04:39 PM: FTC_USD: The evaluated rating rule is ((0.00000099, 0.000001) * ERR_RATE_UNAVAILABLE(bitstamp, BTC_USD)) * (0.75, 1.25)\n2/19/20 8:04:39 PM: FTC_USD: Rate rule error (RateUnavailable)\n2/19/20 8:04:39 PM: FTC_USD: Exception reaching exchange bitstamp (Unauthorized access to the API, premium plan needed)\n' } } }
